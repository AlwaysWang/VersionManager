<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wt.basedao.programDao">
<resultMap type="com.wt.bean.Program" id="ProgramMapper">
<id column="pid" property="id"></id>
<result column="pgname" property="pgName"/>
<result column="pgedition"  property="pgEdition"/>
<result column="remark"  property="remark"/>
<result column="storagepath"  property="storagePath"/>
<result column="progdisc" property="progdisc"/>
<result column="languagetype" property="languageType"/>
<result column="systemtype" property="systemType"/>
<result column="istdate" property="istDate"/>
<!-- many to many with testtype -->
<association property="testType"  javaType="com.wt.bean.TestType">
<id column="typeid" property="typeId"/>
<result column="istdate" property="istDate"/>
<result column="remark" property="remark"/>
<result column="typename" property="typeName"/>
<result column="uptdate" property="uptDate"/>
</association>
<collection property="funList"  ofType="com.wt.bean.FunctionModule">
<id column="fid"   property="id"/>
<result column="name" property="name"/>
<result column="debugfile" property="debugFile"/>
<result column="istdate" property="istdate"/>
<result column="funremark" property="remark"/>
<result column="testcode" property="testCode"/>
<result column="typeid" property="typeid"/>
<result column="uptdate"  property="uptdate"/>
</collection>
<collection property="testCode" ofType="com.wt.bean.TestCode">
<id column="code" property="code"/>
<result column="testname" property="testName"/>
<result column="istdate" property="istDate"/>
<result column="uptdate" property="uptDate"/>
<result column="typeid" property="typeId"/>
</collection>
<!-- many to one with testtype -->
</resultMap>
<select id="getProgramByProgramNameAndTestCode" resultType="com.wt.bean.Program">
select f.istdate,f.uptdate,p.pgname,p.pid,f.typeid,f.testcode,p.reamrk,p.storagepath,p.pgedition from functionmodule f,program p,programmodule pm where f.fid=pm.mdid and p.pid=pm.pgid
and pgname=#{pgName} and testcode=#{testCode}
</select>
<select id="getAllProgramList"  resultMap="ProgramMapper">
<!--select f.*,p.*,t.* ,pm.* from functionmodule f,program p ,testtype t,programmodule pm where f.fid=pm.mdid and p.pid=pm.pgid and f.typeid=t.typeid-->
select p.* from program p order by p.pid desc
</select>
<insert id="insertProgram" parameterType="com.wt.bean.Program">
insert into program(pid,pgname,pgedition,storagepath,remark,progdisc,languagetype,systemtype,istdate) values(program_seq.nextval,#{pgName},#{pgEdition},#{storagePath},#{remark},#{progdisc},#{languageType},#{systemType},to_date(#{nowDate},'YYYY-MM-DD HH24:MI:SS'))
<!--  insert into programmodule(id)values(programmodule_seq.nextval)
insert into functionmodule(id)values(functionmodule_seq.nextval)-->
</insert>
<select id="getProgramList" resultType="com.wt.bean.Program">
select * from program
</select>
<select id="getSomeProgramList" resultMap="ProgramMapper">
<!--  select p.*,f.*,pm.*,t.* from program p ,functionmodule f, programmodule pm,testtype t,testcode c
where f.fid=pm.mdid and p.pid=pm.pgid and t.typeid=f.typeid and t.typeid=c.typeid-->
select p.* from program p 
<where>
<if test="pgName!=null and pgName!=''">
and p.pgname LIKE concat(concat('%',#{pgName}),'%')  
</if>

<!--<if test="testCode!=null and testCode!=''">
and c.testname=#{testCode}
</if>
 -->
 <if test="endDate!=null and endDate!=''">
and p.istdate <![CDATA[<=]]>to_date(#{endDate},'YYYY-MM-DD HH24:MI:SS') 
</if>
<if test="startDate!=null and startDate!=''">
and p.istdate <![CDATA[>=]]> to_date(#{startDate},'YYYY-MM-DD')
</if>
</where>
order by p.pid desc
</select>
<select id="getProgramById"  resultMap="ProgramMapper"  parameterType="java.lang.Long">
select p.* from program p 
where p.pid=#{pId}
</select>
<update id="updateProgram" parameterType="com.wt.bean.Program">
update program set pgname=#{pgName},languagetype=#{languageType},systemType=#{systemType},pgedition=#{pgEdition},progdisc=#{progdisc},storagepath=#{storagePath},remark=#{remark} where pid=#{pId}
</update>
<select id="getProgramListByCriteria"  resultMap="ProgramMapper" >
<!--  select * from(select rownum rid, pid,pgname,pgedition,storagepath,remark,testcode,testname from(
select c.testname,c.typeid, f.fid,f.typeid,f.testcode,p.pid,p.pgname,p.pgedition,p.storagepath,p.remark,t.typeid ,pm.mdid,pm.pgid from functionmodule f,program p ,testtype t,programmodule pm,testcode c where f.fid=pm.mdid and p.pid=pm.pgid and f.typeid=t.typeid and t.typeid=c.typeid))
 where rid between #{StartPos} and #{EndPos} -->
 
 select * from(select rownum rid, pid,pgname,pgedition,storagepath,remarkï¼Œistdate from(
 select p.pid,p.pgname,p.pgedition,p.storagepath,p.remark,p.istdate from program p
  order by p.pid desc))
 where rid between #{StartPos} and #{EndPos} 
 
</select>
<select id="getSomeProgramListByCriteria" resultMap="ProgramMapper" >
<!-- select * from(select rownum rid, pid,pgname,pgedition,storagepath,remark,testcode,testname from(
select c.testname,c.typeid, f.fid,f.typeid,f.testcode,p.pid,p.pgname,p.pgedition,p.storagepath,p.remark,t.typeid ,pm.mdid,pm.pgid from functionmodule f,program p ,testtype t,programmodule pm,testcode c 
where f.fid=pm.mdid and p.pid=pm.pgid and f.typeid=t.typeid and t.typeid=c.typeid
<if test="pgName!=null and pgName!=''">
and p.pgname=#{pgName} 
</if>
<if test="testCode!=null and testCode!=''">
and c.testname=#{testCode}
</if>
<if test="endDate!=null and endDate!=''">
and f.istdate <![CDATA[<=]]>to_date(#{endDate},'YYYY-MM-DD') 
</if>
<if test="startDate!=null and startDate!=''">
and f.istdate <![CDATA[>=]]> to_date(#{startDate},'YYYY-MM-DD')
</if>
))
 where rid between #{StartPos} and #{EndPos}--> 
 select * from(select rownum rid, pid,pgname,pgedition,storagepath,remark,istdate from(
select p.pid,p.pgname,p.pgedition,p.storagepath,p.remark,p.istdate from program p 
<where>
<if test="pgName!=null and pgName!=''">
 p.pgname LIKE concat(concat('%',#{pgName}),'%') 
</if>
<if test="endDate!=null and endDate!=''">
and p.istdate <![CDATA[<=]]>to_date(#{endDate},'YYYY-MM-DD HH24:MI:SS') 
</if>
<if test="startDate!=null and startDate!=''">
and p.istdate <![CDATA[>=]]> to_date(#{startDate},'YYYY-MM-DD')
</if>
</where>
order by p.pid desc))
where rid between #{StartPos} and #{EndPos}
 
 </select>
 <delete id="deleteProgramById" parameterType="long">
 delete from program where pid=#{pgId}
 </delete>
</mapper>