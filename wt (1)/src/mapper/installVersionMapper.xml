<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wt.basedao.installVersionDao">
<resultMap  type="com.wt.bean.InstallVersion" id="InstallVersionMapper">
<id column="vid" property="id"/>
<result column="vid" property="id"/>
<result  column="versiondate" property="istDate"/>
<result column="mdid" property="mdId"/>
<result  column="opername" property="operName"/>
<result column="remark" property="remark"/>
<result column="savepath" property="savePath"/>
<result  column="vercode" property="verCode"/>
<result  column="vername" property="verName"/>
<!-- 表达与程序表多对一的关系 -->
<association property="program" javaType="com.wt.bean.Program">
<id column="pid" property="id"></id>
<result column="pgname" property="pgName"/>
<result column="pgedition"  property="pgEdition"/>
<result column="remark"  property="remark"/>
<result column="storagepath"  property="storagePath"/>
<result column="progdisc" property="progdisc"/>
<result column="languagetype" property="languageType"/>
<result column="systemtype" property="systemType"/>
</association>
<!-- 表达与功能表多对一的关系 -->
<association property="functionmodule" javaType="com.wt.bean.FunctionModule">
<id column="fid"   property="id"/>
<result column="name" property="name"/>
<result column="debugfile" property="debugFile"/>
<result column="istdate" property="istdate"/>
<result column="funremark" property="remark"/>
<result column="testcode" property="testCode"/>
<result column="typeid" property="typeid"/>
<result column="uptdate"  property="uptdate"/>
</association>
<!-- 表达与测试表多对一的关系 -->
<association property="testtype" javaType="com.wt.bean.TestType">
<id column="typeid" property="typeId"/>
<result column="istdate" property="istDate"/>
<result column="remark" property="remark"/>
<result column="typename" property="typeName"/>
<result column="uptdate" property="uptDate"/>
</association>
<!-- 表达于testcode表的多对一的关系 -->
<association property="testCode" javaType="com.wt.bean.TestCode">
<id column="id" property="id"></id>
<result column="code" property="code"/>
<result column="state" property="state"/>
<result column="istdate" property="istDate"/>
<result column="uptdate" property="uptDate"/>
<result column="typeid" property="typeId"/>
<result column="remark" property="remark"/>
<result column="testname" property="testName"/>
</association>
</resultMap>
<select id="getSomeInstallVersionList"  resultMap="InstallVersionMapper">
select f.*,t.*,c.*,v.* ,pm.*,p.*,vf.* from functionmodule f,installversion v ,testtype t, 
testcode c ,programmodule pm,program p,versionrelation vf where pm.pgid=p.pid and f.fid=pm.mdid and f.fid=vf.mdid and vf.vid=v.vid and t.typeid=f.typeid and t.typeid=c.typeid and c.code=f.testcode 

<if test="startDate!=null and startDate!=''">
  and   v.versiondate <![CDATA[>=]]> to_date(#{startDate},'YYYY-MM-DD')
</if>
<if test="endDate!=null and endDate!=''">
    and v.versiondate <![CDATA[<=]]>to_date(#{endDate},'YYYY-MM-DD HH24:MI:SS')
</if>
<if test="typeName!=null and typeName!=''">
and t.typename=#{typeName}
</if>
<if test="testName!=null and testName!=''">
and c.testname=#{testName}
</if>
order by v.vid desc
</select>

<!--  <select id="getSomeInstallVersionListByCriteria"  resultMap="InstallVersionMapper">
select f.*,t.*,c.*,v.* ,pm.*,p.*from functionmodule f,installversion v ,testtype t, 
testcode c ,programmodule pm,program p 
<where> pm.pgid=p.pid and f.fid=pm.mdid and f.fid=v.mdid and t.typeid=f.typeid and t.typeid=c.typeid and v.istdate <![CDATA[>=]]> to_date(#{startDate},'YYYY-MM-DD')
and v.istdate <![CDATA[<=]]>to_date(#{endDate},'YYYY-MM-DD') and t.typename=#{typeName} and c.testname=#{testName}
</where>
  limit 
#{StartPos,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
</select>
-->
<select id="getInstallVersionList"   resultMap="InstallVersionMapper">
<!--  select f.fid,f.typeid,v.vid,v.vercode,v.mdid,v.opername,v.savepath,pm.pgid,pm.mdid,p.pid, vr.vid,vr.mdid from functionmodule f,installversion v,programmodule pm,program p,versionrelation vr where f.fid=pm.mdid and v.vid=vr.vid and vr.mdid=f.fid and  
 pm.pgid=p.pid group by f.fid,f.typeid,v.vid,v.vercode,v.mdid,v.opername,v.savepath,pm.pgid,pm.mdid,p.pid, vr.vid,vr.mdid-->
 select v.vid,v.vercode,v.mdid,v.opername,v.savepath,v.remark,v.versiondate,v.vername  from functionmodule f,installversion v,programmodule pm,program p,versionrelation vr where f.fid=pm.mdid and v.vid=vr.vid and vr.mdid=f.fid and
pm.pgid=p.pid group by v.vid,v.vercode,v.mdid,v.opername,v.savepath,v.remark,v.versiondate,v.vername order by v.vid desc
</select>
<select id="getInstallVersionListByCriteria" resultMap="InstallVersionMapper">
select * from (select rownum rid,vid,vercode,opername,savepath,remark,versiondate,vername from
   (select  v.vid,v.vercode,v.mdid,v.opername,v.savepath,v.remark,v.versiondate,v.vername from
   functionmodule f,installversion v,programmodule pm,program p,testcode c,testtype t ,versionrelation vf
   where pm.pgid=p.pid and f.fid=pm.mdid and f.fid=vf.mdid and v.vid=vf.vid and t.typeid=f.typeid and t.typeid=c.typeid and c.code=f.testcode
  group by v.vid,v.vercode,v.mdid,v.opername,v.savepath,v.remark,v.versiondate,v.vername
    order by v.vid desc ))
   where rid between #{StartPos} and #{Endpos}

</select>
<select id="getSomeInstallVersionListByCriteria" resultMap="InstallVersionMapper">
select * from (select rownum rid, vid,vercode,opername,savepath,remark,versiondate,vername from
   (select v.vid,v.vercode,v.mdid,v.opername,v.savepath,v.remark,v.versiondate,v.vername
    from functionmodule f,installversion v,programmodule pm,program p,testcode c,testtype t ,versionrelation vf
   where pm.pgid=p.pid and f.fid=pm.mdid and f.fid=vf.mdid and vf.vid=v.vid and t.typeid=f.typeid and t.typeid=c.typeid and c.code=f.testcode
   
<if test="startDate!=null and startDate!=''">
     and v.versiondate <![CDATA[>=]]> to_date(#{startDate},'YYYY-MM-DD')
</if>
<if test="endDate!=null and endDate!=''">
    and v.versiondate <![CDATA[<=]]>to_date(#{endDate},'YYYY-MM-DD HH24:MI:SS')
</if>
<if test="typeName!=null and typeName!=''">
and t.typename=#{typeName}
</if>
<if test="testName!=null and testName!=''">
and c.testname=#{testName}
</if> 
  group by  v.vid,v.vercode,v.mdid,v.opername,v.savepath,v.remark,v.versiondate,v.vername order by v.vid desc)) 
 where rid between #{StartPos} and #{Endpos} 
</select>
<select id="getAllVersion" resultType="com.wt.bean.InstallVersion">
select * from installversion v
</select>
<insert id="insertInstallVersion" parameterType="com.wt.bean.InstallVersion">
insert into installversion (vid,vername,vercode,opername,remark,savepath,versiondate)values(installversion_seq.nextval,#{verName},#{verCode},#{operName},#{remark},#{savePath},to_date(#{nowDate},'YYYY-MM-DD HH24:MI:SS'))
</insert>
<select id="getVersion" resultType="com.wt.bean.InstallVersion" parameterType="java.lang.String">
select * from  installversion where vercode=#{verCode}
</select>
<update id="updateInstallVersion" parameterType="com.wt.bean.InstallVersion">
update installversion set vercode=#{verCode},vername=#{verName},remark=#{remark},savepath=#{savePath},opername=#{operName} where vid=#{Id}
</update>
<select id="getVersionById" resultMap="InstallVersionMapper">
select * from  installversion where vid=#{Id}
</select>
<select id="getVersionByMaxId"  resultMap="InstallVersionMapper">
select * from installversion v where v.vid=(select max(vid) from installversion )
</select>
<delete id="deleteInstallVersionById" parameterType="long">
delete   from installversion where vid=#{VId}
</delete>
</mapper>